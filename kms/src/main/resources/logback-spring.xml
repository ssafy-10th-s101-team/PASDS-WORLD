<configuration scan="true" scanPeriod="30 seconds">

    <property name="LOG_PATH" value="./logs"/>
    <property name="LOG_FILE_NAME" value="api"/>
    <property name="ERR_LOG_FILE_NAME" value="error"/>
    <property name="MAX_HISTORY" value="30"/>
    <property name="MAX_SIZE" value="1GB"/>

    <!-- API 로깅 -->
    <appender name="ApiLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder" />
        <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${MAX_SIZE}</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 오류 로깅 -->
    <appender name="ErrorLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder" />
        <file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${MAX_SIZE}</totalSizeCap>
        </rollingPolicy>
    </appender>

    <root level="info">
        <appender-ref ref="ApiLogFile" />
        <appender-ref ref="ErrorLogFile" />
    </root>
</configuration>